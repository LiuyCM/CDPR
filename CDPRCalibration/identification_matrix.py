import numpy as np
import draw_utils as du
import geometric_elements as ge
from scipy.optimize import least_squares
from scipy.optimize import approx_fprime
import simulation_utils as su
import post_process as pp
import time_utils as tu
import CDPR_fuction as CF
import jacobian as jac

def debug_sampling():
    select_points1 = np.array([
    [0.0,315.0,2129.090909090909],
    [0.0,367.63157894736844,565.4545454545455],
    [0.0,1104.4736842105262,2492.727272727273],
    [0.0,446.57894736842104,2383.636363636364],
    [0.0,1262.3684210526317,638.1818181818182],
    [0.0,315.0,1801.818181818182],
    [0.0,420.2631578947368,3001.818181818182],
    [0.0,1183.4210526315787,2420.0],
    [0.0,420.2631578947368,2965.4545454545455],
    [0.0,578.1578947368421,1438.1818181818182],
    [0.0,525.5263157894736,2310.909090909091],
    [0.0,709.7368421052631,2383.636363636364],
    [0.0,472.89473684210526,1838.1818181818182],
    [0.0,604.4736842105262,2420.0],
    [0.0,1288.6842105263158,892.7272727272727],
    [0.0,1078.157894736842,856.3636363636364],
        ]).tolist()
    select_points2 = np.array([
    [0.0,355,3020],
    [0.0,315,2980],
    [0.0,355,420],
    [0.0,315,460],
    [0.0,1075,420],
    [0.0,1115,460],
    [0.0,1075,3020],
    [0.0,1115,2980],
    [0.0,648.333,420],
    [0.0,648.333,3020],
    [0.0,981.667,420],
    [0.0,981.667,3020],
    [0.0,315,1353.333],
    [0.0,315,2286.667],
    [0.0,1115,1353.333],
    [0.0,1115,2286.667],
        ]).tolist()
    return select_points2
